#!/bin/bash
set -ex

cd $(dirname $0)/..

source ./scripts/version
./scripts/release-build

touch dist/publish.sh
chmod 755 dist/publish.sh

if [ "$OS_FIRMWARE" = "false" ]; then
    echo "github-release upload --user burmilla --repo os --tag ${VERSION} --file ./dist/artifacts/burmillaos.iso --name burmillaos-${VERSION}-vm.iso" >> dist/publish.sh
    exit 0
else
    echo "github-release release --user burmilla --repo os --tag ${VERSION} --pre-release --draft" > dist/publish.sh

    echo "github-release upload --user burmilla --repo os --tag ${VERSION} --file ./dist/artifacts/burmillaos.iso --name burmillaos-${VERSION}.iso" >> dist/publish.sh

    # Include iPXE files
    echo "github-release upload --user burmilla --repo os --tag ${VERSION} --file ./dist/artifacts/initrd-${VERSION} --name initrd" >> dist/publish.sh
    echo "github-release upload --user burmilla --repo os --tag ${VERSION} --file ./dist/artifacts/vmlinuz-${KERNEL_VERSION} --name vmlinuz" >> dist/publish.sh
    echo "github-release upload --user burmilla --repo os --tag ${VERSION} --file ./dist/artifacts/rootfs.tar.gz --name rootfs.tar.gz" >> dist/publish.sh

    cat dist/images | sed 's/^/docker push /' >> dist/publish.sh
fi

echo "--- Run dist/publish.sh"
cat dist/publish.sh

